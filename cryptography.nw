\title{Trying out literate programming}

This is an experiment with literate programming, based around an
attempt to understand and implement some cryptanalysis.

\section{Cryptography basics}

\subsection{S-boxes}

An S-box is a simple function that substitutes one value for another
in a fixed, key-independent way.

Our S-box function should satsify the following test:

<<testSBox>>=
sbox = [2, 0, 3, 1]
self.assertEqual(0, cryptography.substituteSBox(sbox, 1))
@ 

<<cryptography.py>>=
#!/usr/bin/python

def substituteSBox(sbox, index):
    return sbox[index]
@ 

\section{Testing}

There should hopefully be unit tests that can be run to verify that
everything tangled correctly. They could look something like this:

<<tests.py>>=
import unittest
import cryptography

class CryptographyTest(unittest.TestCase):
    def testSBox(self):
        <<testSBox>>

if __name__ == '__main__':
    unittest.main()
@ 

